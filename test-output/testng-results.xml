<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="38" total="95" passed="57">
  <reporter-output>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCos]. Status <2>. Time duration <2>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCos]. Status <2>. Time duration <2>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCos]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCos]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCos]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCos]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCos]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCos]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCtg]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCtg]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCtg]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCtg]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCtgFromZero]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCtgFromZero]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <9>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <9>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivLong]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivLong]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroDouble]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroDouble]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroDouble]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroDouble]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroDouble]. Status <2>. Time duration <6>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroDouble]. Status <2>. Time duration <6>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroLong]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroLong]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOverflowLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOverflowLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOverflowLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOverflowLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testIsNegWithPositiveNumber]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testIsNegWithPositiveNumber]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testIsNegative]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testIsNegative]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testIsPosWithNegativeNumber]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testIsPosWithNegativeNumber]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testIsPositive]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testIsPositive]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testIsPositive]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testIsPositive]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultOverflowLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultOverflowLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultOverflowLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultOverflowLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testPowNumZeroAndPowLessZero]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testPowNumZeroAndPowLessZero]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSin]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSin]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSin]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSin]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSin]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSin]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSin]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSin]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSqrt]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSqrt]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSqrt]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSqrt]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSqrt]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSqrt]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSqrtWhenNumLessZero]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSqrtWhenNumLessZero]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <3>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <3>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <1>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <1>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <2>. Time duration <7>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <2>. Time duration <7>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <2>. Time duration <1>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:53 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2006>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:53 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2006>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:55 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2010>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:55 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2010>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:57 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2002>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:57 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2002>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:59 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2002>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:39:59 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2002>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:01 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2005>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:01 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2005>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:03 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2003>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:03 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2003>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:05 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2004>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:05 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2004>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:07 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2005>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:07 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2005>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:09 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2007>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:09 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2007>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:11 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2001>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:11 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2001>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:13 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2007>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:13 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2007>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:15 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2003>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:15 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2003>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:17 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2004>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:17 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2004>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2004>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2004>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSumOverflowLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSumOverflowLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSumOverflowLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSumOverflowLong]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testTg]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testTg]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testTg]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testTg]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testTg]. Status <2>. Time duration <0>.]]>
    </line>
    <line>
      <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testTg]. Status <2>. Time duration <0>.]]>
    </line>
  </reporter-output>
  <suite name="Default Suite" duration-ms="28962" started-at="2016-11-02T13:39:50Z" finished-at="2016-11-02T13:40:19Z">
    <groups>
      <group name="doubleType">
        <method signature="CalculatorTest.testCos(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testCos" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testCtg(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testCtg" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testCtgFromZero(double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testCtgFromZero" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testDivDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testDivOnZeroDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivOnZeroDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testDivOverflowDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivOverflowDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testMultDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testMultOverflowDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultOverflowDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testPow(double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testPow" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testPowNumZeroAndPowLessZero(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testPowNumZeroAndPowLessZero" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSin(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSin" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSqrt(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSqrt" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSqrtWhenNumLessZero(double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSqrtWhenNumLessZero" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSubDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSumDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSumOverflowDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumOverflowDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testTg(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testTg" class="businessObject.CalculatorTest"/>
      </group> <!-- doubleType -->
      <group name="regression">
        <method signature="CalculatorTest.testCos(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testCos" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testCtg(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testCtg" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testCtgFromZero(double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testCtgFromZero" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testDivDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testDivLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testDivOnZeroDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivOnZeroDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testDivOnZeroLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivOnZeroLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testDivOverflowDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivOverflowDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testDivOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivOverflowLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testIsNegWithPositiveNumber(long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testIsNegWithPositiveNumber" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testIsNegative(long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testIsNegative" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testIsPosWithNegativeNumber(long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testIsPosWithNegativeNumber" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testIsPositive(long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testIsPositive" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testMultDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testMultLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testMultOverflowDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultOverflowDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testMultOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultOverflowLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testPow(double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testPow" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testPowNumZeroAndPowLessZero(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testPowNumZeroAndPowLessZero" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSin(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSin" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSqrt(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSqrt" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSqrtWhenNumLessZero(double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSqrtWhenNumLessZero" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSubDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSubLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSumDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSumLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSumOverflowDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumOverflowDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSumOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumOverflowLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testTg(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testTg" class="businessObject.CalculatorTest"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="CalculatorTest.testCos(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testCos" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testCtg(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testCtg" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testDivLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testIsNegative(long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testIsNegative" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testIsPositive(long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testIsPositive" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testMultDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testMultLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testPow(double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testPow" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSin(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSin" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSqrt(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSqrt" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSubDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSubLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSumDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumDouble" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSumLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumLong" class="businessObject.CalculatorTest"/>
      </group> <!-- smoke -->
      <group name="longType">
        <method signature="CalculatorTest.testDivLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testDivOnZeroLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivOnZeroLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testDivOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivOverflowLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testIsNegWithPositiveNumber(long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testIsNegWithPositiveNumber" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testIsNegative(long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testIsNegative" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testIsPosWithNegativeNumber(long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testIsPosWithNegativeNumber" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testIsPositive(long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testIsPositive" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testMultLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testMultOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultOverflowLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSubLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSumLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumLong" class="businessObject.CalculatorTest"/>
        <method signature="CalculatorTest.testSumOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumOverflowLong" class="businessObject.CalculatorTest"/>
      </group> <!-- longType -->
    </groups>
    <test name="tesNgTask" duration-ms="28962" started-at="2016-11-02T13:39:50Z" finished-at="2016-11-02T13:40:19Z">
      <class name="businessObject.CalculatorTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="beforeClass" is-config="true" duration-ms="13" started-at="2016-11-02T16:39:50Z" finished-at="2016-11-02T16:39:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="testCos(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testCos" duration-ms="2" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-565656.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.9480811024049992]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.9480811024049992] but found [0.3180286516377352]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.9480811024049992] but found [0.3180286516377352]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at businessObject.CalculatorTest.testCos(CalculatorTest.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCos]. Status <2>. Time duration <2>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCos]. Status <2>. Time duration <2>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCos -->
        <test-method status="FAIL" signature="testCos(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testCos" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1.0] but found [0.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1.0] but found [0.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at businessObject.CalculatorTest.testCos(CalculatorTest.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCos]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCos]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCos -->
        <test-method status="FAIL" signature="testCos(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testCos" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20.56]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.13919430405964572]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-0.13919430405964572] but found [0.9902650886087779]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-0.13919430405964572] but found [0.9902650886087779]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at businessObject.CalculatorTest.testCos(CalculatorTest.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCos]. Status <2>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCos]. Status <2>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCos -->
        <test-method status="FAIL" signature="testCos(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testCos" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5403023058681398]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.5403023058681398] but found [0.8414709848078965]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.5403023058681398] but found [0.8414709848078965]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at businessObject.CalculatorTest.testCos(CalculatorTest.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCos]. Status <2>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCos]. Status <2>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCos -->
        <test-method status="FAIL" signature="testCtg(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testCtg" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-565656.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.981118517223813]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [2.981118517223813] but found [-1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [2.981118517223813] but found [-1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at businessObject.CalculatorTest.testCtg(CalculatorTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCtg]. Status <2>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCtg]. Status <2>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCtg -->
        <test-method status="FAIL" signature="testCtg(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testCtg" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20.56]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.1405626691891154]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-0.1405626691891154] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-0.1405626691891154] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at businessObject.CalculatorTest.testCtg(CalculatorTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCtg]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCtg]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCtg -->
        <test-method status="FAIL" signature="testCtgFromZero(double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testCtgFromZero" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Method CalculatorTest.testCtgFromZero(double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.IllegalArgumentException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Method CalculatorTest.testCtgFromZero(double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.IllegalArgumentException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.testng.TestException: 
Method CalculatorTest.testCtgFromZero(double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.IllegalArgumentException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1512)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCtgFromZero]. Status <2>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testCtgFromZero]. Status <2>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCtgFromZero -->
        <test-method status="PASS" signature="testDivDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivDouble" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5.656565656E9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivDouble -->
        <test-method status="PASS" signature="testDivDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivDouble" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[456789.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[76131.5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivDouble -->
        <test-method status="PASS" signature="testDivDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivDouble" duration-ms="9" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <9>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <9>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivDouble -->
        <test-method status="PASS" signature="testDivDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivDouble" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-6.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivDouble -->
        <test-method status="PASS" signature="testDivDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivDouble" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-8.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-0.4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivDouble]. Status <1>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivDouble -->
        <test-method status="PASS" signature="testDivLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivLong" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-566]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[656]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivLong]. Status <1>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivLong]. Status <1>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivLong -->
        <test-method status="PASS" signature="testDivLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivLong" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivLong]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivLong]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivLong -->
        <test-method status="PASS" signature="testDivLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivLong" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5547]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-555]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-9]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivLong]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivLong]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivLong -->
        <test-method status="PASS" signature="testDivLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivLong" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5466]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-565]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivLong]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testDivLong]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivLong -->
        <test-method status="FAIL" signature="testDivOnZeroDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivOnZeroDouble" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-656.555]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.ArithmeticException but got org.testng.TestException: 
Method CalculatorTest.testDivOnZeroDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.ArithmeticException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.ArithmeticException but got org.testng.TestException: 
Method CalculatorTest.testDivOnZeroDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.ArithmeticException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.testng.TestException: 
Method CalculatorTest.testDivOnZeroDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.ArithmeticException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1512)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroDouble]. Status <2>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroDouble]. Status <2>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivOnZeroDouble -->
        <test-method status="FAIL" signature="testDivOnZeroDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivOnZeroDouble" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[579.2456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.ArithmeticException but got org.testng.TestException: 
Method CalculatorTest.testDivOnZeroDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.ArithmeticException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.ArithmeticException but got org.testng.TestException: 
Method CalculatorTest.testDivOnZeroDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.ArithmeticException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.testng.TestException: 
Method CalculatorTest.testDivOnZeroDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.ArithmeticException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1512)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroDouble]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroDouble]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivOnZeroDouble -->
        <test-method status="FAIL" signature="testDivOnZeroDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivOnZeroDouble" duration-ms="6" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.ArithmeticException but got org.testng.TestException: 
Method CalculatorTest.testDivOnZeroDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.ArithmeticException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.ArithmeticException but got org.testng.TestException: 
Method CalculatorTest.testDivOnZeroDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.ArithmeticException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.testng.TestException: 
Method CalculatorTest.testDivOnZeroDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.ArithmeticException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1512)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroDouble]. Status <2>. Time duration <6>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroDouble]. Status <2>. Time duration <6>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivOnZeroDouble -->
        <test-method status="FAIL" signature="testDivOnZeroLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivOnZeroLong" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[555556549]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.ArithmeticException but got org.testng.TestException: 
Expected exception java.lang.ArithmeticException but got java.lang.NumberFormatException: Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.ArithmeticException but got org.testng.TestException: 
Expected exception java.lang.ArithmeticException but got java.lang.NumberFormatException: Attempt to divide by zero
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.testng.TestException: 
Expected exception java.lang.ArithmeticException but got java.lang.NumberFormatException: Attempt to divide by zero
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 20 more
Caused by: java.lang.NumberFormatException: Attempt to divide by zero
	at businessObject.Calculator.div(Calculator.java:36)
	at businessObject.CalculatorTest.testDivOnZeroLong(CalculatorTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	... 22 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroLong]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroLong]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivOnZeroLong -->
        <test-method status="FAIL" signature="testDivOnZeroLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivOnZeroLong" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-659894]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.ArithmeticException but got org.testng.TestException: 
Expected exception java.lang.ArithmeticException but got java.lang.NumberFormatException: Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.ArithmeticException but got org.testng.TestException: 
Expected exception java.lang.ArithmeticException but got java.lang.NumberFormatException: Attempt to divide by zero
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.testng.TestException: 
Expected exception java.lang.ArithmeticException but got java.lang.NumberFormatException: Attempt to divide by zero
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 20 more
Caused by: java.lang.NumberFormatException: Attempt to divide by zero
	at businessObject.Calculator.div(Calculator.java:36)
	at businessObject.CalculatorTest.testDivOnZeroLong(CalculatorTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	... 22 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroLong]. Status <2>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroLong]. Status <2>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivOnZeroLong -->
        <test-method status="FAIL" signature="testDivOnZeroLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivOnZeroLong" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.ArithmeticException but got org.testng.TestException: 
Expected exception java.lang.ArithmeticException but got java.lang.NumberFormatException: Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.ArithmeticException but got org.testng.TestException: 
Expected exception java.lang.ArithmeticException but got java.lang.NumberFormatException: Attempt to divide by zero
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.testng.TestException: 
Expected exception java.lang.ArithmeticException but got java.lang.NumberFormatException: Attempt to divide by zero
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 20 more
Caused by: java.lang.NumberFormatException: Attempt to divide by zero
	at businessObject.Calculator.div(Calculator.java:36)
	at businessObject.CalculatorTest.testDivOnZeroLong(CalculatorTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	... 22 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroLong]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOnZeroLong]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivOnZeroLong -->
        <test-method status="FAIL" signature="testDivOverflowDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivOverflowDouble" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.StackOverflowError but got java.lang.RuntimeException: java.lang.IllegalStateException: Cannot get a numeric value from a text cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.StackOverflowError but got java.lang.RuntimeException: java.lang.IllegalStateException: Cannot get a numeric value from a text cell
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1185)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: java.lang.RuntimeException: java.lang.IllegalStateException: Cannot get a numeric value from a text cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:161)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:429)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1383)
	at org.testng.internal.Invoker.createParameters(Invoker.java:1075)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1180)
	... 20 more
Caused by: java.lang.IllegalStateException: Cannot get a numeric value from a text cell
	at org.apache.poi.hssf.usermodel.HSSFCell.typeMismatch(HSSFCell.java:654)
	at org.apache.poi.hssf.usermodel.HSSFCell.getNumericCellValue(HSSFCell.java:679)
	at dataProvider.ReaderXls.parse(ReaderXls.java:41)
	at dataProvider.DataProviderClass.getDataDouble(DataProviderClass.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:135)
	... 24 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivOverflowDouble -->
        <test-method status="FAIL" signature="testDivOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivOverflowLong" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-9223372036854775808]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.StackOverflowError but got org.testng.TestException: 
Method CalculatorTest.testDivOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.StackOverflowError but got org.testng.TestException: 
Method CalculatorTest.testDivOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.testng.TestException: 
Method CalculatorTest.testDivOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1512)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOverflowLong]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOverflowLong]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivOverflowLong -->
        <test-method status="FAIL" signature="testDivOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testDivOverflowLong" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9223372036854775807]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.StackOverflowError but got org.testng.TestException: 
Method CalculatorTest.testDivOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.StackOverflowError but got org.testng.TestException: 
Method CalculatorTest.testDivOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.testng.TestException: 
Method CalculatorTest.testDivOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1512)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOverflowLong]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testDivOverflowLong]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivOverflowLong -->
        <test-method status="FAIL" signature="testIsNegWithPositiveNumber(long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testIsNegWithPositiveNumber" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4546468.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[argument type mismatch]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: argument type mismatch
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testIsNegWithPositiveNumber]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testIsNegWithPositiveNumber]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testIsNegWithPositiveNumber -->
        <test-method status="PASS" signature="testIsNegative(long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testIsNegative" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-555]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testIsNegative]. Status <1>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testIsNegative]. Status <1>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testIsNegative -->
        <test-method status="PASS" signature="testIsPosWithNegativeNumber(long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testIsPosWithNegativeNumber" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-57987876]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testIsPosWithNegativeNumber]. Status <1>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testIsPosWithNegativeNumber]. Status <1>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testIsPosWithNegativeNumber -->
        <test-method status="PASS" signature="testIsPositive(long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testIsPositive" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[32223]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testIsPositive]. Status <1>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testIsPositive]. Status <1>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testIsPositive -->
        <test-method status="FAIL" signature="testIsPositive(long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testIsPositive" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-555]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at businessObject.CalculatorTest.testIsPositive(CalculatorTest.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testIsPositive]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testIsPositive]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testIsPositive -->
        <test-method status="PASS" signature="testMultDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultDouble" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5.6565656562E9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
        <test-method status="PASS" signature="testMultDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultDouble" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
        <test-method status="PASS" signature="testMultDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultDouble" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.65467468465464E17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
        <test-method status="FAIL" signature="testMultDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultDouble" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[456789.2323]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6.258]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2740734.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [2740734.0] but found [2858587.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [2740734.0] but found [2858587.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:207)
	at org.testng.Assert.assertEquals(Assert.java:220)
	at businessObject.CalculatorTest.testMultDouble(CalculatorTest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
        <test-method status="FAIL" signature="testMultDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultDouble" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5.213]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5.24]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[25.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [25.0] but found [27.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [25.0] but found [27.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:207)
	at org.testng.Assert.assertEquals(Assert.java:220)
	at businessObject.CalculatorTest.testMultDouble(CalculatorTest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <2>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <2>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
        <test-method status="FAIL" signature="testMultDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultDouble" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.23]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5.23]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-150.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-150.0] but found [-159.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-150.0] but found [-159.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:207)
	at org.testng.Assert.assertEquals(Assert.java:220)
	at businessObject.CalculatorTest.testMultDouble(CalculatorTest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
        <test-method status="FAIL" signature="testMultDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultDouble" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-8.23]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20.23]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-160.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-160.0] but found [-167.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-160.0] but found [-167.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:207)
	at org.testng.Assert.assertEquals(Assert.java:220)
	at businessObject.CalculatorTest.testMultDouble(CalculatorTest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <2>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultDouble]. Status <2>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
        <test-method status="PASS" signature="testMultLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultLong" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5656565656]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultLong -->
        <test-method status="PASS" signature="testMultLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultLong" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultLong -->
        <test-method status="PASS" signature="testMultLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultLong" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[465467468465464000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultLong -->
        <test-method status="PASS" signature="testMultLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultLong" duration-ms="1" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultLong -->
        <test-method status="PASS" signature="testMultLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultLong" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[456789]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2740734]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultLong -->
        <test-method status="PASS" signature="testMultLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultLong" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-150]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultLong -->
        <test-method status="PASS" signature="testMultLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultLong" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-160]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testMultLong]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultLong -->
        <test-method status="FAIL" signature="testMultOverflowDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultOverflowDouble" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:50Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.StackOverflowError but got java.lang.RuntimeException: java.lang.IllegalStateException: Cannot get a numeric value from a text cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.StackOverflowError but got java.lang.RuntimeException: java.lang.IllegalStateException: Cannot get a numeric value from a text cell
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1185)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: java.lang.RuntimeException: java.lang.IllegalStateException: Cannot get a numeric value from a text cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:161)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:429)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1383)
	at org.testng.internal.Invoker.createParameters(Invoker.java:1075)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1180)
	... 20 more
Caused by: java.lang.IllegalStateException: Cannot get a numeric value from a text cell
	at org.apache.poi.hssf.usermodel.HSSFCell.typeMismatch(HSSFCell.java:654)
	at org.apache.poi.hssf.usermodel.HSSFCell.getNumericCellValue(HSSFCell.java:679)
	at dataProvider.ReaderXls.parse(ReaderXls.java:41)
	at dataProvider.DataProviderClass.getDataDouble(DataProviderClass.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:135)
	... 24 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultOverflowDouble -->
        <test-method status="FAIL" signature="testMultOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultOverflowLong" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-9223372036854769664]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.StackOverflowError but got org.testng.TestException: 
Method CalculatorTest.testMultOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.StackOverflowError but got org.testng.TestException: 
Method CalculatorTest.testMultOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.testng.TestException: 
Method CalculatorTest.testMultOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1512)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultOverflowLong]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultOverflowLong]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultOverflowLong -->
        <test-method status="FAIL" signature="testMultOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testMultOverflowLong" duration-ms="0" started-at="2016-11-02T16:39:50Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9223372036854769664]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.StackOverflowError but got org.testng.TestException: 
Method CalculatorTest.testMultOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.StackOverflowError but got org.testng.TestException: 
Method CalculatorTest.testMultOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.testng.TestException: 
Method CalculatorTest.testMultOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1512)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultOverflowLong]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:50 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testMultOverflowLong]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultOverflowLong -->
        <test-method status="PASS" signature="testPow(double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testPow" duration-ms="1" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[456789.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9.08434924831199E33]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testPow -->
        <test-method status="PASS" signature="testPow(double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testPow" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.65467468465464E17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testPow -->
        <test-method status="PASS" signature="testPow(double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testPow" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-3.2E-4]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testPow -->
        <test-method status="PASS" signature="testPow(double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testPow" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4.11522633744856E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testPow -->
        <test-method status="PASS" signature="testPow(double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testPow" duration-ms="1" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-8.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.15292150460684698E18]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testPow]. Status <1>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testPow -->
        <test-method status="FAIL" signature="testPowNumZeroAndPowLessZero(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testPowNumZeroAndPowLessZero" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-7.0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Method CalculatorTest.testPowNumZeroAndPowLessZero(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.IllegalArgumentException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Method CalculatorTest.testPowNumZeroAndPowLessZero(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.IllegalArgumentException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.testng.TestException: 
Method CalculatorTest.testPowNumZeroAndPowLessZero(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.IllegalArgumentException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1512)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testPowNumZeroAndPowLessZero]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testPowNumZeroAndPowLessZero]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testPowNumZeroAndPowLessZero -->
        <test-method status="PASS" signature="testSin(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSin" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSin]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSin]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSin -->
        <test-method status="PASS" signature="testSin(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSin" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5656.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.9057828422998849]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSin]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSin]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSin -->
        <test-method status="PASS" signature="testSin(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSin" duration-ms="1" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20.56]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.9902650886087779]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSin]. Status <1>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSin]. Status <1>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSin -->
        <test-method status="PASS" signature="testSin(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSin" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.8414709848078965]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSin]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSin]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSin -->
        <test-method status="PASS" signature="testSqrt(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSqrt" duration-ms="1" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSqrt]. Status <1>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSqrt]. Status <1>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSqrt -->
        <test-method status="PASS" signature="testSqrt(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSqrt" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.449489742783178]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSqrt]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSqrt]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSqrt -->
        <test-method status="PASS" signature="testSqrt(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSqrt" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20.56]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.534313619501853]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSqrt]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSqrt]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSqrt -->
        <test-method status="FAIL" signature="testSqrtWhenNumLessZero(double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSqrtWhenNumLessZero" duration-ms="1" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5.6565656E7]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Method CalculatorTest.testSqrtWhenNumLessZero(double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.IllegalArgumentException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Method CalculatorTest.testSqrtWhenNumLessZero(double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.IllegalArgumentException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.testng.TestException: 
Method CalculatorTest.testSqrtWhenNumLessZero(double)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.IllegalArgumentException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1512)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSqrtWhenNumLessZero]. Status <2>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSqrtWhenNumLessZero]. Status <2>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSqrtWhenNumLessZero -->
        <test-method status="PASS" signature="testSubDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubDouble" duration-ms="1" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubDouble -->
        <test-method status="PASS" signature="testSubDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubDouble" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-4.654564564E9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4.654564564E9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubDouble -->
        <test-method status="FAIL" signature="testSubDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubDouble" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5.6562523E7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-456.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-5.6562979E7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-5.6562979E7] but found [-5.6562067E7]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-5.6562979E7] but found [-5.6562067E7]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:207)
	at org.testng.Assert.assertEquals(Assert.java:220)
	at businessObject.CalculatorTest.testSubDouble(CalculatorTest.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubDouble -->
        <test-method status="PASS" signature="testSubDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubDouble" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.4646546546E10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5.4646546546E10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubDouble -->
        <test-method status="PASS" signature="testSubDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubDouble" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9.89898989898989E19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[98.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9.89898989898989E19]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubDouble -->
        <test-method status="PASS" signature="testSubDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubDouble" duration-ms="3" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.12341234123E11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.12341234123E11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <3>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <3>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubDouble -->
        <test-method status="PASS" signature="testSubDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubDouble" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5.55555555555555E14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-5.5555555555556E14]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubDouble]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubDouble -->
        <test-method status="PASS" signature="testSubLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubLong" duration-ms="1" started-at="2016-11-02T16:39:51Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[54646546546]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[54646546546]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <1>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <1>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubLong -->
        <test-method status="PASS" signature="testSubLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubLong" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubLong -->
        <test-method status="PASS" signature="testSubLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubLong" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-4654564564]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4654564564]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <1>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <1>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubLong -->
        <test-method status="FAIL" signature="testSubLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubLong" duration-ms="7" started-at="2016-11-02T16:39:51Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9223372036854775807]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[98]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9223372036854775807]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [9223372036854775807] but found [9223372036854775709]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [9223372036854775807] but found [9223372036854775709]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:265)
	at org.testng.Assert.assertEquals(Assert.java:275)
	at businessObject.CalculatorTest.testSubLong(CalculatorTest.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <2>. Time duration <7>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <2>. Time duration <7>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubLong -->
        <test-method status="FAIL" signature="testSubLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubLong" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-56562523]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[56562979]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [56562979] but found [-56562067]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [56562979] but found [-56562067]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:265)
	at org.testng.Assert.assertEquals(Assert.java:275)
	at businessObject.CalculatorTest.testSubLong(CalculatorTest.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubLong -->
        <test-method status="FAIL" signature="testSubLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubLong" duration-ms="0" started-at="2016-11-02T16:39:51Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[412341234123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-412341234123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0] but found [824682468246]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0] but found [824682468246]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:265)
	at org.testng.Assert.assertEquals(Assert.java:275)
	at businessObject.CalculatorTest.testSubLong(CalculatorTest.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubLong -->
        <test-method status="FAIL" signature="testSubLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSubLong" duration-ms="1" started-at="2016-11-02T16:39:51Z" data-provider="testDataLong" finished-at="2016-11-02T16:39:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-555555555555555]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[555555555555550]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [555555555555550] but found [-555555555555560]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [555555555555550] but found [-555555555555560]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:265)
	at org.testng.Assert.assertEquals(Assert.java:275)
	at businessObject.CalculatorTest.testSubLong(CalculatorTest.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <2>. Time duration <1>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:51 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSubLong]. Status <2>. Time duration <1>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubLong -->
        <test-method status="PASS" signature="testSumDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumDouble" duration-ms="2006" started-at="2016-11-02T16:39:51Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-564.25]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[564.25]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:53 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2006>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:53 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2006>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumDouble -->
        <test-method status="PASS" signature="testSumDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumDouble" duration-ms="2010" started-at="2016-11-02T16:39:53Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1000.05]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[250.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1250.55]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:55 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2010>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:55 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2010>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumDouble -->
        <test-method status="PASS" signature="testSumDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumDouble" duration-ms="2002" started-at="2016-11-02T16:39:55Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1500.50005]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-500.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1000.50005]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:57 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2002>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:57 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2002>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumDouble -->
        <test-method status="PASS" signature="testSumDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumDouble" duration-ms="2002" started-at="2016-11-02T16:39:57Z" data-provider="testDataDouble" finished-at="2016-11-02T16:39:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-800.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-200.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1000.6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:59 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2002>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:39:59 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2002>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumDouble -->
        <test-method status="PASS" signature="testSumDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumDouble" duration-ms="2005" started-at="2016-11-02T16:39:59Z" data-provider="testDataDouble" finished-at="2016-11-02T16:40:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:01 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2005>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:01 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2005>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumDouble -->
        <test-method status="PASS" signature="testSumDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumDouble" duration-ms="2003" started-at="2016-11-02T16:40:01Z" data-provider="testDataDouble" finished-at="2016-11-02T16:40:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5656.25852]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5656.25852]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:03 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2003>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:03 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2003>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumDouble -->
        <test-method status="PASS" signature="testSumDouble(double, double, double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumDouble" duration-ms="2004" started-at="2016-11-02T16:40:03Z" data-provider="testDataDouble" finished-at="2016-11-02T16:40:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-989898.232325787]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-989898.232325787]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:05 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2004>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:05 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumDouble]. Status <1>. Time duration <2004>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumDouble -->
        <test-method status="PASS" signature="testSumLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumLong" duration-ms="2005" started-at="2016-11-02T16:40:05Z" data-provider="testDataLong" finished-at="2016-11-02T16:40:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-500000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-500000]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:07 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2005>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:07 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2005>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumLong -->
        <test-method status="PASS" signature="testSumLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumLong" duration-ms="2007" started-at="2016-11-02T16:40:07Z" data-provider="testDataLong" finished-at="2016-11-02T16:40:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9223372036854775807]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9223372036854775807]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:09 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2007>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:09 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2007>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumLong -->
        <test-method status="PASS" signature="testSumLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumLong" duration-ms="2001" started-at="2016-11-02T16:40:09Z" data-provider="testDataLong" finished-at="2016-11-02T16:40:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[35]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:11 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2001>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:11 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2001>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumLong -->
        <test-method status="PASS" signature="testSumLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumLong" duration-ms="2007" started-at="2016-11-02T16:40:11Z" data-provider="testDataLong" finished-at="2016-11-02T16:40:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1250]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-50]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1300]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:13 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2007>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:13 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2007>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumLong -->
        <test-method status="PASS" signature="testSumLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumLong" duration-ms="2003" started-at="2016-11-02T16:40:13Z" data-provider="testDataLong" finished-at="2016-11-02T16:40:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:15 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2003>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:15 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2003>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumLong -->
        <test-method status="PASS" signature="testSumLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumLong" duration-ms="2004" started-at="2016-11-02T16:40:15Z" data-provider="testDataLong" finished-at="2016-11-02T16:40:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-878787]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[878787]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:17 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2004>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:17 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2004>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumLong -->
        <test-method status="PASS" signature="testSumLong(long, long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumLong" duration-ms="2004" started-at="2016-11-02T16:40:17Z" data-provider="testDataLong" finished-at="2016-11-02T16:40:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[595959595959]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-59]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[595959595900]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2004>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test passed: [tesNgTask][businessObject.CalculatorTest][testSumLong]. Status <1>. Time duration <2004>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumLong -->
        <test-method status="FAIL" signature="testSumOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumOverflowLong" duration-ms="0" started-at="2016-11-02T16:40:19Z" data-provider="testDataLong" finished-at="2016-11-02T16:40:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9223372036854769664]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.StackOverflowError but got org.testng.TestException: 
Method CalculatorTest.testSumOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.StackOverflowError but got org.testng.TestException: 
Method CalculatorTest.testSumOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.testng.TestException: 
Method CalculatorTest.testSumOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1512)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSumOverflowLong]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSumOverflowLong]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumOverflowLong -->
        <test-method status="FAIL" signature="testSumOverflowDouble(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumOverflowDouble" duration-ms="0" started-at="2016-11-02T16:40:19Z" data-provider="testDataDouble" finished-at="2016-11-02T16:40:19Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.StackOverflowError but got java.lang.RuntimeException: java.lang.IllegalStateException: Cannot get a numeric value from a text cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.StackOverflowError but got java.lang.RuntimeException: java.lang.IllegalStateException: Cannot get a numeric value from a text cell
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1185)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: java.lang.RuntimeException: java.lang.IllegalStateException: Cannot get a numeric value from a text cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:161)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:429)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1383)
	at org.testng.internal.Invoker.createParameters(Invoker.java:1075)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1180)
	... 20 more
Caused by: java.lang.IllegalStateException: Cannot get a numeric value from a text cell
	at org.apache.poi.hssf.usermodel.HSSFCell.typeMismatch(HSSFCell.java:654)
	at org.apache.poi.hssf.usermodel.HSSFCell.getNumericCellValue(HSSFCell.java:679)
	at dataProvider.ReaderXls.parse(ReaderXls.java:41)
	at dataProvider.DataProviderClass.getDataDouble(DataProviderClass.java:24)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:135)
	... 24 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumOverflowDouble -->
        <test-method status="FAIL" signature="testSumOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testSumOverflowLong" duration-ms="0" started-at="2016-11-02T16:40:19Z" data-provider="testDataLong" finished-at="2016-11-02T16:40:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-9223372036854769664]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.StackOverflowError but got org.testng.TestException: 
Method CalculatorTest.testSumOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.StackOverflowError but got org.testng.TestException: 
Method CalculatorTest.testSumOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.testng.TestException: 
Method CalculatorTest.testSumOverflowLong(long, long)[pri:0, instance:businessObject.CalculatorTest@47d384ee] should have thrown an exception of class java.lang.StackOverflowError
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1512)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSumOverflowLong]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testSumOverflowLong]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumOverflowLong -->
        <test-method status="FAIL" signature="testTg(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testTg" duration-ms="0" started-at="2016-11-02T16:40:19Z" data-provider="testDataDouble" finished-at="2016-11-02T16:40:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-565656.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.3354445635832207]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.3354445635832207] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.3354445635832207] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at businessObject.CalculatorTest.testTg(CalculatorTest.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testTg]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testTg]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testTg -->
        <test-method status="FAIL" signature="testTg(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testTg" duration-ms="0" started-at="2016-11-02T16:40:19Z" data-provider="testDataDouble" finished-at="2016-11-02T16:40:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.0] but found [NaN]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.0] but found [NaN]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at businessObject.CalculatorTest.testTg(CalculatorTest.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testTg]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testTg]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testTg -->
        <test-method status="FAIL" signature="testTg(double, double)[pri:0, instance:businessObject.CalculatorTest@47d384ee]" name="testTg" duration-ms="0" started-at="2016-11-02T16:40:19Z" data-provider="testDataDouble" finished-at="2016-11-02T16:40:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20.56]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-7.114264447088601]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-7.114264447088601] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-7.114264447088601] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at businessObject.CalculatorTest.testTg(CalculatorTest.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testTg]. Status <2>. Time duration <0>.]]>
            </line>
            <line>
              <![CDATA[</br>Wed Nov 02 16:40:19 MSK 2016. Test faild: [tesNgTask][businessObject.CalculatorTest][testTg]. Status <2>. Time duration <0>.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testTg -->
      </class> <!-- businessObject.CalculatorTest -->
    </test> <!-- tesNgTask -->
  </suite> <!-- Default Suite -->
</testng-results>
